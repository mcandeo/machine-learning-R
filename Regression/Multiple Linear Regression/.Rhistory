setwd("~/Documents/MachineLearningCodes/Multiple Linear Regression")
#Importing the dataset
dataset = read.csv('50_Startups.csv')
View(dataset)
#Encoding categorical data
dataset$State(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
View(dataset)
#Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
View(dataset)
#Spliting the dataset into training set and test set
library(caTools)
set.seed(123)
#Spliting the dataset into training set and test set
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(test_set)
View(training_set)
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.2)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(test_set)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
#Importing the dataset
dataset = read.csv('50_Startups.csv')
#Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
#Spliting the dataset into training set and test set
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(training_set)
#Importing the dataset
dataset = read.csv('50_Startups.csv')
#Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
#Spliting the dataset into training set and test set
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.2)
training_set = subset(dataset, split == FALSE)
test_set = subset(dataset, split == TRUE)
View(training_set)
#Importing the dataset
dataset = read.csv('50_Startups.csv')
#Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
#Spliting the dataset into training set and test set
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(dataset)
View(dataset)
#Multiple Linear Regression model
regressor = lm(formula = Profit ~ ., data = training_set)
#Predicting the test set results
y_pred = predict(regressor, newdata = test_set)
y_pred
summary(regressor)
#Importing the dataset
dataset = read.csv('50_Startups.csv')
#Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
#Spliting the dataset into training set and test set
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
#Building the optimal model using Backward Elimination
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend,
data = dataset)
summary(regressor)
y_pred = predict(regressor, newdata = test_set)
y_pred
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Marketing.Spend,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend
data = dataset)
summary(regressor)
View(regressor)
regressor = lm(formula = Profit ~ R.D.Spend
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend,
data = dataset)
summary(regressor)
